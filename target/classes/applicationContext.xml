<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!-- We need to tell that this application uses annotations like @Value -->
<context:annotation-config></context:annotation-config>
<!-- Providing the location for the properties file -->
<context:property-placeholder location="app.properties"/>

<!-- Specifying the property name and value to inject from the app.properties file -->
<bean name="customerRepository" class="com.pluralsight.repository.HibernateCustomerRespositoryImpl">
<!--  <property name="dbUsername" value="${dbUsername}"></property>-->

</bean>
<!-- Setting the scope to Singleton & prototype for customerService -->
<bean name="customerService" class="com.pluralsight.service.CustomerServiceImpl"  autowire="byType" scope="prototype">
<!-- The below line represents the wiring of our repository tier to our service tier so
     that any number of repository instances can be used with different implementations and we 
     wouldnt need to change our code accordingly for every implementation.
 -->
 <!-- The below line also represents setter injection byName 
 where we have given the name as customerRepository in the setter attribute -->

 <!-- <property name="customerRepository" ref="customerRepository"></property> -->

 <!-- The below line describes the constructor injection with index as 0 defining only 1 parameter
 for the constructor which references the customerRepository reference -->

<!-- <constructor-arg index="0" ref="customerRepository"></constructor-arg> -->

<!-- I am going to comment out both the <constructor-arg> and <property tag and add autowire feature
to the customerService bean> -->
</bean>
</beans>
